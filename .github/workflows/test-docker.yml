name: Docker test
on:
  workflow_call:
    inputs:
      cuda_compiler_version:
        type: string
        default: None
      name:
        type: string
        default: cpu
      build-name:
        type: string
        default: build
      reset-cache:
        type: boolean
        default: false

jobs:
  build:
    runs-on: [self-hosted, linux, intel-ai.hdk.l0]
    steps:
      - name: Clean
        run: |
            docker stop hdk-build.${{ inputs.name }} || true
            docker rm hdk-build.${{ inputs.name }} || true
            rm -rf _work/*

      - name: Set env context
        run: |
          echo RUN_STAMP=docker-${{ runner.os }}-${{ inputs.name }} >>$GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.RUN_STAMP }}-${{ inputs.build-name }}

      - name: Unpack build files
        run: |
          tar -zxf build.tgz

      - name: Build docker image
        run: |
          cat omniscidb/docker/dev/Dockerfile omniscidb/docker/dev/Dockerfile.${{ inputs.name }} >Dockerfile
          docker build . ${{ inputs.reset-cache && '--no-cache' || '' }} --tag hdk-build.${{ inputs.name }}

      - name: Start the container
        run:  |
          docker run -id --name hdk-build.${{ inputs.name }} --network host --device /dev/nvidia-modeset:/dev/nvidia-modeset --device /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools --device /dev/nvidia-uvm:/dev/nvidia-uvm --device /dev/nvidia0:/dev/nvidia0 --device /dev/nvidiactl:/dev/nvidiactl hdk-build.${{ inputs.name }}:latest
          docker exec hdk-build.${{ inputs.name }} mkdir -p /_work/
          docker cp build.tgz hdk-build.${{ inputs.name }}:/_work/
          docker exec hdk-build.${{ inputs.name }} chown -R ghrunner:ghrunner /_work/
          docker exec -u ghrunner hdk-build.${{ inputs.name }} tar -zxf /_work/build.tgz -C /_work/

      - name: Smoke test
        if: inputs.name == 'cuda'
        run: |
          docker exec -u ghrunner hdk-build.${{ inputs.name }} dpkg -l
          docker exec -u ghrunner hdk-build.${{ inputs.name }} bash /_work/omniscidb/scripts/conda/test.sh

      - name: ASAN test
        if: inputs.build-name == 'asan'
        run: |
          echo FIXME docker exec -u ghrunner hdk-build.${{ inputs.name }} bash -c 'cd /_work/omniscidb/build/Tests && ./ArrowBasedExecuteTest --use-rel-alg-cache=cache.txt'

      - name: Stop the container
        if: always()
        run: docker stop hdk-build.${{ inputs.name }} || true

