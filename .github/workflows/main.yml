name: Build
on:
  workflow_dispatch:
    inputs:
      reset-cache:
        type: boolean
        default: true
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: '51 2 * * *'

jobs:
  modin:
    uses: ./.github/workflows/modin.yml

  build:
    uses: ./.github/workflows/build.yml

  build-cuda:
    uses: ./.github/workflows/build.yml
    with:
      name: cuda
      cuda_compiler_version: 12-0

  sanity:
    needs: build
    uses: ./.github/workflows/test.yml
    with:
      cache-suffix: ${{ needs.build.outputs.cache-suffix }}
      test: sanity

  asan:
    needs: build
    uses: ./.github/workflows/test.yml
    with:
      cache-suffix: ${{ needs.build.outputs.cache-suffix }}
      test: asan

#  test-asan-docker:
#    needs: [build-asan, asan]
#    uses: ./.github/workflows/test-docker.yml
#    with:
#      build-name: asan
#      reset-cache: ${{ !!inputs.reset-cache }}


  build-cuda-docker:
    uses: ./.github/workflows/build-docker.yml
    with:
      name: cuda
      options: -DENABLE_PYTHON=off 

  test-cuda-docker:
    needs: build-cuda-docker
    uses: ./.github/workflows/test-docker.yml
    with:
      name: cuda
      # input for a push event is an empty string, convert it to boolean
      reset-cache: ${{ !!inputs.reset-cache }}

  build-l0-docker:
    uses: ./.github/workflows/build-docker.yml
    with:
      name: l0
      options: -DENABLE_L0=on -DENABLE_CUDA=off -DENABLE_PYTHON=off 

  test-l0-docker:
    needs: build-l0-docker
    uses: ./.github/workflows/test-l0-docker.yml
    with:
      name: l0
      reset-cache: ${{ !!inputs.reset-cache }}

#
#  sanity-test:
#    uses: ./.github/workflows/build-docker-hdk.yml

  pytest:
    uses: ./.github/workflows/pytest.yml

  style-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set env context
        run: |
          echo RUN_STAMP=${{ runner.os }}-${{ inputs.name }} >>$GITHUB_ENV
          echo CONDA_ENV_PATH=$CONDA/envs/omnisci-dev >>$GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Restore Conda env cache
        id: conda-cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CONDA_ENV_PATH }}
          key: ${{ env.RUN_STAMP }}-conda-${{ hashFiles('omniscidb/scripts/mapd-deps-conda-dev-env.yml') }}-${{ env.DATE }}
          restore-keys: |
            ${{ env.RUN_STAMP }}-conda-${{ hashFiles('omniscidb/scripts/mapd-deps-conda-dev-env.yml') }}-

      - name: Update Conda env
        if: steps.conda-cache.cache-hit != 'true'
        run: |
          conda update conda
          conda env update -f omniscidb/scripts/mapd-deps-conda-dev-env.yml

      - name: C++ Style check
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate omnisci-dev
          find . -name build -prune -or -name ThirdParty -prune -or -name third_party -prune -or \( -name '*.cpp' -print -or -name '*.h' -print \) | xargs clang-format --dry-run --Werror -style=file
        shell: bash
